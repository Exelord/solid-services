{
  "name": "solid-services",
  "description": "Solid.js library adding a services layer for global shared state.",
  "version": "4.1.2",
  "license": "MIT",
  "homepage": "https://github.com/Exelord/solid-services",
  "repository": "github:exelord/solid-services",
  "info": "Services are global objects useful for features that require shared state or persistent connections. They are lazy evaluated, only when used, solving an issue of cross dependencies and contexts tree.",
  "keywords": [
    "solidhack",
    "best_ecosystem",
    "solidjs"
  ],
  "contributors": [
    {
      "name": "Maciej Kwa≈õniak",
      "email": "contact@exelord.com",
      "url": "https://exelord.com"
    }
  ],
  "files": [
    "dist"
  ],
  "main": "./dist/index.cjs.js",
  "module": "./dist/index.es.js",
  "types": "./dist/types/index.d.ts",
  "source": "./dist/src/index.js",
  "sideEffects": false,
  "type": "module",
  "exports": {
    ".": {
      "import": "./dist/solid-services.js",
      "require": "./dist/solid-services.cjs"
    }
  },
  "scripts": {
    "test": "vitest",
    "coverage": "vitest --coverage",
    "prepublishOnly": "npm run build",
    "dev": "npm-run-all --parallel 'build:** -- --watch'",
    "build": "npm-run-all --parallel build:** && npm run types",
    "build:js": "vite build",
    "build:source": "tsc",
    "types": "tsc --emitDeclarationOnly --declaration --outDir ./dist/types",
    "release": "release-it"
  },
  "release-it": {
    "git": {
      "commitMessage": "v${version}",
      "tagAnnotation": "v${version}"
    },
    "npm": {
      "publish": false
    },
    "github": {
      "release": true,
      "releaseName": "v${version}"
    },
    "hooks": {
      "before:init": [
        "npm test -- --run"
      ]
    }
  },
  "devDependencies": {
    "@vitest/ui": "^0.27.1",
    "c8": "^7.12.0",
    "npm-run-all": "^4.1.5",
    "release-it": "^15.6.0",
    "solid-js": "^1.6.6",
    "typescript": "^4.9.4",
    "vite": "^4.0.3",
    "vitest": "^0.26.2"
  },
  "peerDependencies": {
    "solid-js": "^1.0.0"
  }
}
